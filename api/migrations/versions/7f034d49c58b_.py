"""empty message

Revision ID: 7f034d49c58b
Revises: 
Create Date: 2019-12-28 15:27:57.685647

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7f034d49c58b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('lat', sa.Text(), nullable=True),
    sa.Column('lon', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login', sa.String(length=400), nullable=True),
    sa.Column('name', sa.String(length=400), nullable=True),
    sa.Column('password_hash', sa.String(length=400), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('is_confirmed', sa.Boolean(), nullable=True),
    sa.Column('confirmed_on', sa.DateTime(), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=True),
    sa.Column('phone', sa.String(length=400), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sensor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('registered', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sensor_id', sa.Integer(), nullable=True),
    sa.Column('ts', sa.DateTime(), nullable=True),
    sa.Column('temp0', sa.Numeric(precision=3), nullable=True),
    sa.Column('wght0', sa.Numeric(precision=3), nullable=True),
    sa.Column('wght1', sa.Numeric(precision=3), nullable=True),
    sa.Column('wght2', sa.Numeric(precision=3), nullable=True),
    sa.Column('wght3', sa.Numeric(precision=3), nullable=True),
    sa.Column('wght4', sa.Numeric(precision=3), nullable=True),
    sa.Column('temp1', sa.Numeric(precision=3), nullable=True),
    sa.Column('hum0', sa.Numeric(precision=3), nullable=True),
    sa.Column('hum1', sa.Numeric(precision=3), nullable=True),
    sa.Column('tempA', sa.Numeric(precision=3), nullable=True),
    sa.Column('uv', sa.Integer(), nullable=True),
    sa.Column('lux', sa.Integer(), nullable=True),
    sa.Column('soilmoist', sa.Integer(), nullable=True),
    sa.Column('co2', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sensor_id'], ['sensor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('camera',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('data_id', sa.Integer(), nullable=True),
    sa.Column('camlabel', sa.Text(), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['data_id'], ['data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('probe',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.Text(), nullable=False),
    sa.Column('data_id', sa.Integer(), nullable=True),
    sa.Column('ptype', sa.String(length=200), nullable=True),
    sa.Column('label', sa.String(length=200), nullable=True),
    sa.Column('minvalue', sa.Numeric(precision=3), nullable=True),
    sa.Column('maxvalue', sa.Numeric(precision=3), nullable=True),
    sa.ForeignKeyConstraint(['data_id'], ['data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('camera_position',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('camera_id', sa.Integer(), nullable=True),
    sa.Column('poslabel', sa.Integer(), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['camera_id'], ['camera.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data_cameras',
    sa.Column('data_id', sa.Integer(), nullable=True),
    sa.Column('camera_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['camera_id'], ['camera.id'], ),
    sa.ForeignKeyConstraint(['data_id'], ['data.id'], )
    )
    op.create_table('probe_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('probe_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.Numeric(precision=3), nullable=True),
    sa.ForeignKeyConstraint(['probe_id'], ['probe.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data_picture',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('data_id', sa.Integer(), nullable=True),
    sa.Column('camera_position_id', sa.Integer(), nullable=True),
    sa.Column('fpath', sa.Text(), nullable=True),
    sa.Column('thumbnail', sa.Text(), nullable=True),
    sa.Column('label', sa.Text(), nullable=True),
    sa.Column('original', sa.Text(), nullable=True),
    sa.Column('results', sa.Text(), nullable=True),
    sa.Column('ts', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['camera_position_id'], ['camera_position.id'], ),
    sa.ForeignKeyConstraint(['data_id'], ['data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('picture_zone',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('picture_id', sa.Integer(), nullable=True),
    sa.Column('fpath', sa.Text(), nullable=True),
    sa.Column('thumbnail', sa.Text(), nullable=True),
    sa.Column('label', sa.Text(), nullable=True),
    sa.Column('original', sa.Text(), nullable=True),
    sa.Column('results', sa.Text(), nullable=True),
    sa.Column('ts', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['picture_id'], ['data_picture.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('picture_zone')
    op.drop_table('data_picture')
    op.drop_table('probe_data')
    op.drop_table('data_cameras')
    op.drop_table('camera_position')
    op.drop_table('probe')
    op.drop_table('camera')
    op.drop_table('data')
    op.drop_table('sensor')
    op.drop_table('user')
    op.drop_table('location')
    # ### end Alembic commands ###
